#!/usr/bin/env python
import argparse
import numpy as np
import os
import sys
import edd

def run(chrom_size, ip, ctr, out, score_function='log-ratio',
        bin_size=10000):
    e = edd.load_experiment(chrom_size, ip, ctr, bin_size)
    df = e.as_data_frame(normalize=True)
    if score_function == 'log-ratio':
        df['ratio'] = np.log(df.ip / df.input).replace(
                [np.inf, -np.inf], np.nan)
        df = df.dropna()
    else:
        raise Exception('not implemented')
    df.to_csv(out, sep='\t', cols=['chrom', 'start', 'end', 'ratio'],
            header=False, index=False)

if __name__ == '__main__':
    p = argparse.ArgumentParser()
    p.add_argument('chrom_size', type=argparse.FileType('r'))
    p.add_argument('ip_bam')
    p.add_argument('control_bam')
    p.add_argument('-s', '--bin-size', type=int, default=10000)
    p.add_argument('output_file', type=argparse.FileType('w'))
    p.add_argument('-f-', '--bin-score-function',
                        choices=['log-ratio', 'CI-lower'],
                        default='log-ratio')

    args = p.parse_args(sys.argv[1:])
    assert os.path.isfile(args.ip_bam)
    assert os.path.isfile(args.control_bam)
    run(args.chrom_size.name, args.ip_bam, args.control_bam, 
            args.output_file, score_function=args.bin_score_function,
            bin_size=args.bin_size)
