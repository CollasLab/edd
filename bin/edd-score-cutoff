#!/usr/bin/env python
import argparse
import collections
import sys

import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pylab as plt
import numpy as np

from enriched_domain_caller import preprocess, score_cutoff

struct = collections.namedtuple('container', 'scores min max')
optscore = collections.namedtuple('optscore', 'xs ys')


def run(src, dst):
    s = preprocess.GenomeBinScore.from_count_file(src, normalize=True)
    a = score_cutoff.ScoreCutoff.from_chrom_scores(s._chrom_scores).optimize()
    print 'pos bin ratio: %.2f' % a.ratio
    a.plot_results(dst, title=src, annotate=True)
    if a.ratio > 0.5:
        print 'UNUSABLE RESULTS'
        print '\tpos bin ratio for max score too low'
        print '\ttry to increase the bin size'
    elif a.ratio > 0.45:
        print 'WARNING'
        print '\tratio of positive bins unusually high'
        print '\ttry to increase the bin size'


if __name__ == '__main__':
    p = argparse.ArgumentParser()
    p.add_argument('input_file', type=argparse.FileType('r'))
    p.add_argument('output_file', type=argparse.FileType('w'))
    args = p.parse_args(sys.argv[1:])
    run(args.input_file.name, args.output_file.name)
